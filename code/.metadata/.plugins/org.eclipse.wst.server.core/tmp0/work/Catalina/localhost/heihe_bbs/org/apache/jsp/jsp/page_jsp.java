/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.61
 * Generated at: 2017-11-07 08:52:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class page_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <title>layPage快速使用</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/res/layui/css/layui.css\" media=\"all\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write(" <div id = \"content\"></div>\r\n");
      out.write("<div id=\"test1\"></div>\r\n");
      out.write(" \r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/res/layui/layui.all.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("layui.use('laypage', function(){\r\n");
      out.write("  var laypage = layui.laypage;\r\n");
      out.write("  \r\n");
      out.write("\t//创建ajax对象\r\n");
      out.write("\tvar request = new XMLHttpRequest();\r\n");
      out.write("\t\r\n");
      out.write("\t//与服务器建立连接\r\n");
      out.write("\trequest.open(\"get\",\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/totalcount.do\",true);\r\n");
      out.write("\t//第一次发送ajax请求，向服务器索要当前表一共有多少条记录\r\n");
      out.write("\trequest.send();\r\n");
      out.write("\t\r\n");
      out.write("\t//监控当前ajax请求状态，绑定事件处理函数\r\n");
      out.write("\trequest.onreadystatechange = function(){\r\n");
      out.write("\t\t//alert(req.readyState);//输出当前ajax请求 所处的状态\r\n");
      out.write("\t\t//已经成功获得服务器回应\r\n");
      out.write("\t\tif(request.readyState===4){\r\n");
      out.write("\t\t\t//服务器响应成功\r\n");
      out.write("\t\t\tif(request.status === 200)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tvar totalcount = request.responseText;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//发第二次ajax请求，向服务器索要第一页数据\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//执行一个laypage实例\r\n");
      out.write("\t\t\t\t  laypage.render({\r\n");
      out.write("\t\t\t\t    elem: 'test1', //注意，这里的 test1 是 ID，不用加 # 号\r\n");
      out.write("\t\t\t\t    limit:3,\r\n");
      out.write("\t\t\t\t    count:totalcount, //数据总数，从服务端得到\r\n");
      out.write("\t\t\t\t    jump: function(obj, first){\r\n");
      out.write("\t\t\t\t        //obj包含了当前分页的所有参数，比如：\r\n");
      out.write("\t\t\t\t        console.log(obj.curr); //得到当前页，以便向服务端请求对应页的数据。\r\n");
      out.write("\t\t\t\t        console.log(obj.limit); //得到每页显示的条数\r\n");
      out.write("\t\t\t\t        \r\n");
      out.write("\t\t\t\t      //创建ajax对象\r\n");
      out.write("\t\t\t\t\t\tvar req = new XMLHttpRequest();\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t//与服务器建立连接\r\n");
      out.write("\t\t\t\t\t\treq.open(\"get\",\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/page.do?pageIndex=\"+obj.curr+\"&pageSize=\"+obj.limit,true);\r\n");
      out.write("\t\t\t\t\t\t//发送请求\r\n");
      out.write("\t\t\t\t\t\treq.send();\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t//监控当前ajax请求状态，绑定事件处理函数\r\n");
      out.write("\t\t\t\t\t\treq.onreadystatechange = function(){\r\n");
      out.write("\t\t\t\t\t\t\t//alert(req.readyState);//输出当前ajax请求 所处的状态\r\n");
      out.write("\t\t\t\t\t\t\t//已经成功获得服务器回应\r\n");
      out.write("\t\t\t\t\t\t\tif(req.readyState===4){\r\n");
      out.write("\t\t\t\t\t\t\t\t//服务器响应成功\r\n");
      out.write("\t\t\t\t\t\t\t\tif(req.status === 200)\r\n");
      out.write("\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar div = document.getElementById(\"content\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t//alert(req.responseText);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar jsonObj = JSON.parse(req.responseText);//json字符串转成json对象\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar html = \"<ul>\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\tfor(var i = 0; i < jsonObj.length; i++)\r\n");
      out.write("\t\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\thtml += \"<li>\"+ jsonObj[i].title +\"</li>\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar str = html+\"</ul>\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\talert(str);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tdiv.innerHTML = str;\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\telse//响应失败\r\n");
      out.write("\t\t\t\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t        \r\n");
      out.write("\t\t\t\t        \r\n");
      out.write("\t\t\t\t        //首次不执行\r\n");
      out.write("\t\t\t\t        if(!first){\r\n");
      out.write("\t\t\t\t          //do something\r\n");
      out.write("\t\t\t\t        }\r\n");
      out.write("\t\t\t\t      }\r\n");
      out.write("\t\t\t\t  });\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse//响应失败\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
